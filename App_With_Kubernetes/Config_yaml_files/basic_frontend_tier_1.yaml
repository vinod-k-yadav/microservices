apiVersion: v1
kind: Pod
metadata:
  name: frontend-tier
  labels:
    app: dummy-project
    tier: frontend
spec:
  containers:
    - name: frontend-container
      image : frontend_image:v1
      imagePullPolicy: IfNotPresent
      ports:
        - containerPort: 6000
      env:
        - name: PRODUCT_URL
          # Environment variable service discovery
          # Naming pattern:
          #   IP address: <all_caps_service_name>_SERVICE_HOST
          #   Port: <all_caps_service_name>_SERVICE_PORT
          #   Named Port: <all_caps_service_name>_SERVICE_PORT_<all_caps_port_name>
          value: http://$(BACKEND_TIER_SERVICE_HOST):$(BACKEND_TIER_SERVICE_PORT_PRODUCT)
          # In multi-container example value was
          # value: redis://localhost:6379 
        - name: USER_URL
          value: http://$(BACKEND_TIER_SERVICE_HOST):$(BACKEND_TIER_SERVICE_PORT_USER)
        - name : ORDER_URL
          value: http://$(BACKEND_TIER_SERVICE_HOST):$(BACKEND_TIER_SERVICE_PORT_ORDER)
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-tier
  labels:
    app: dummy-project
spec:
  ports:
  - port: 5000
    targetPort: 6000
  selector:
    tier: frontend
  type: NodePort
